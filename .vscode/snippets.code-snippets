{
  "TestInvoke": {
    "prefix": ["test-invoke"],
    "body": [
      "game:GetService(\"UserInputService\").InputBegan:Connect(function(input, gameProcessed)",
      "\tif gameProcessed then",
      "\t\t return",
      "\tend",
      "",
      "\tif input.KeyCode == Enum.KeyCode.${1:E} then",
      "\t\t$0",
      "\tend",
      "end)"
    ]
  },
  "ClientPath": {
    "prefix": ["paths-client"],
    "body": [
      "local Players = game:GetService(\"Players\")",
      "local Paths = require(Players.LocalPlayer.PlayerScripts.Paths)"
    ]
  },
  "ServerPath": {
    "prefix": ["paths-server"],
    "body": [
      "local ServerScriptService = game:GetService(\"ServerScriptService\")",
      "local Paths = require(ServerScriptService.Paths)"
    ]
  },
  "LocalPlayer": {
    "prefix": ["localplayer"],
    "body": ["local player = Players.LocalPlayer"]
  },
  "Module": {
    "prefix": ["module"],
    "body": [
      "local ${0:$TM_FILENAME_BASE} = {}",
      "",
      "return ${0:$TM_FILENAME_BASE}"
    ]
  },
  "CommentHeader": {
    "prefix": ["comment-header"],
    "body": [
      "-------------------------------------------------------------------------------",
      "-- ${0:COMMENT}",
      "-------------------------------------------------------------------------------"
    ]
  },
  "UIStateMachine": {
    "prefix": ["ui-state"],
    "body": [
      "local UIController = require(Paths.Controllers.UI.UIController)",
      "local UIConstants = require(Paths.Controllers.UI.UIConstants)",
      "",
      "local uiStateMachine = UIController.getStateMachine()"
    ]
  },
  "SharedModule": {
    "prefix": ["shared-module"],
    "body": [
      "local ${1:Module} = require(ReplicatedStorage.Modules.${1:Module})"
    ]
  },

  "SharedUtil": {
    "prefix": ["shared-util"],
    "body": [
      "local ${1:Module} = require(ReplicatedStorage.Modules.Utils.${1:Module})"
    ]
  },

  "PathsController": {
    "prefix": ["paths-controller"],
    "body": ["local ${1:Module} = require(Paths.Controllers.${1:Module})"]
  },

  "PathsService": {
    "prefix": ["paths-service"],
    "body": ["local ${1:Module} = require(Paths.Services.${1:Module})"]
  },

  "PathsSharedUtil": {
    "prefix": ["paths-shared-util"],
    "body": ["local ${1:Module} = require(Paths.Shared.Utils.${1:Module})"]
  }
}
